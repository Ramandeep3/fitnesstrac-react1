{"version":3,"sources":["pages/Home.js","api/index.js","pages/Register.js","pages/Login.js","pages/MakeActivity.js","pages/Activities.js","pages/MakeRoutine.js","pages/AddActivityToRoutine.js","pages/EditRoutine.js","pages/EditActivityDurationOrCount.js","pages/MyRoutines.js","pages/Logout.js","pages/Routines.js","index.js"],"names":["Home","authenticate","Jumbotron","style","height","Container","fontSize","marginBottom","to","color","background","padding","margin","borderRadius","getToken","localStorage","getItem","login","token","setItem","Register","username","setUsername","setToken","setAuthentication","useState","password","setPassword","passwordConfirmation","setPassWordConfirmation","isLoggedIn","result","console","log","alert","message","Form","onSubmit","event","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","error","undefined","catch","Group","controlId","Label","Control","type","placeholder","onChange","target","value","minLength","Text","id","muted","Button","variant","Login","loginSuccessful","setLoginSuccessful","MakeActivity","activities","setActivities","show","setShow","name","setName","description","setDescription","handleClose","onClick","Modal","onHide","Header","closeButton","Title","Authorization","newActivities","push","reset","Body","Footer","Activities","useEffect","map","activity","index","MakeRoutine","routines","setRoutines","goal","setGoal","isPublic","setIsPublic","newRoutines","AddActivityToRoutine","routineId","activityId","setActivityId","count","setCount","duration","setDuration","a","Number","EditRoutine","updatedRoutine","routine","EditActivityDurationOrCount","routineActivityId","userId","updatedDurationOrCount","creatorId","MyRoutines","setUserId","toUpperCase","fontWeight","creatorName","newDeletedRoutines","filter","Logout","logoutSuccessful","setLogoutSuccessful","removeItem","exact","path","Routines","CardGroup","Card","backgroundColor","App","Navbar","bg","Brand","href","Nav","className","Link","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.abadd54e.chunk.js","sourcesContent":["import Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = ({authenticate}) => {\n  return (\n    <Jumbotron style={{ height: \"100vh\" }}>\n      <Container>\n        <h1 style={{ fontSize: \"65px\" }}>\n          <center>Welcome to FitnessTrackr!</center>\n        </h1>\n        <p style={{ fontSize: \"40px\", marginBottom: \"50px\" }}>\n          <center>\n            Exercise not only changes your body...It changes your mind, your\n            attitude, and your mood!\n          </center>\n        </p>\n        <center>\n         { !authenticate ? <Link\n            to=\"/register\"\n            style={{\n              color: \"#fff\",\n              background: \"blue\",\n              padding: \"10px\",\n              margin: \"10px 15px\",\n              borderRadius: \"7%\",\n              fontSize: \"25px\",\n            }}\n          >\n            Register\n          </Link> : null}\n        </center>\n      </Container>\n    </Jumbotron>\n  );\n};\n\nexport default Home;","export function getToken() {\n  const token = localStorage.getItem(\"token\");\n  return token;\n}\n\nexport function login(token) {\n  localStorage.setItem(\"token\", token);\n}\n\nexport function logout() {\n  localStorage.removeItem(\"token\");\n}\n\nexport function getUsername() {\n  return fetch(\"http://fitnesstrac-kr.herokuapp.com/api/users/me\", {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n  });\n}","import { useState, React } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { login, getToken } from \"../api\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\n\nconst Register = ({\n  username,\n  setUsername,\n  token,\n  setToken,\n  authenticate,\n  setAuthentication,\n}) => {\n  const [password, setPassword] = useState();\n  const [passwordConfirmation, setPassWordConfirmation] = useState();\n\n  function createUser(event) {\n    event.preventDefault();\n    if (username && password && password === passwordConfirmation) {\n      fetch(\"http://fitnesstrac-kr.herokuapp.com/api/users/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          username: username,\n          password: password,\n        }),\n      })\n        .then((response) => response.json())\n        .then((result) => {\n          console.log(result);\n          if (result.error) {\n            alert(result.error);\n          }\n          if (result.token !== undefined) {\n            login(result.token);\n            setToken(getToken());\n            isLoggedIn(result);\n          }\n        })\n        .catch(console.error);\n    }\n  }\n\n  const isLoggedIn = (result) => {\n    if (result.token) {\n      console.log(\"is registered\");\n      setAuthentication(true);\n      alert(result.message);\n    } else {\n      console.log(\"not registered\");\n    }\n  };\n\n  if (authenticate && token) {\n    return <Redirect to=\"./myRoutines\" />;\n  }\n\n  return (\n    <div>\n      <Container>\n        <center>\n          <h1 style={{ padding: \"35px\" }}>REGISTER PAGE</h1>\n        </center>\n        <Form onSubmit={createUser}>\n          <Form.Group controlId=\"formBasicUsername\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              type=\"username\"\n              placeholder=\"Enter username\"\n              onChange={(event) => {\n                setUsername(event.target.value);\n              }}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              placeholder=\"Password\"\n              minLength=\"8\"\n              onChange={(event) => {\n                setPassword(event.target.value);\n              }}\n            />\n            <Form.Text id=\"passwordHelpInline\" muted>\n              Must be greater than 7 characters.\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPasswordConfirmation\">\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              placeholder=\"Password Confirmation\"\n              minLength=\"8\"\n              onChange={(event) => {\n                setPassWordConfirmation(event.target.value);\n              }}\n            />\n            <Form.Text id=\"passwordHelpInline\" muted>\n              Must be greater than 7 characters.\n            </Form.Text>\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </Container>\n    </div>\n  );\n};\n\nexport default Register;","\nimport { React, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { getToken, login } from \"../api\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\n\nconst Login = ({\n  authenticate,\n  setAuthentication,\n  username,\n  setUsername,\n  setToken,\n}) => {\n  const [password, setPassword] = useState();\n  const [loginSuccessful, setLoginSuccessful] = useState(false);\n  function authentication(event) {\n    event.preventDefault();\n    fetch(\"https://fitnesstrac-kr.herokuapp.com/api/users/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password,\n      }),\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        if (result.error) {\n          alert(\"Username or Password does not match. Please try again.\");\n        } else {\n          console.log(result);\n          login(result.token);\n          setToken(getToken());\n          isLoggedIn(result);\n        }\n      })\n      .catch(console.error);\n  }\n\n  const isLoggedIn = (result) => {\n    if (!result.error) {\n      console.log(\"is logged in\");\n      setAuthentication(true);\n      setLoginSuccessful(true);\n      alert(result.message);\n    } else {\n      console.log(\"not logged in\");\n      alert(result.message);\n    }\n  };\n\n  if (loginSuccessful && authenticate) {\n    return <Redirect to=\"/myRoutines\" />;\n  }\n\n  return (\n    <div>\n      <Container>\n        <center><h1 style={{padding: \"35px\"}}>LOGIN PAGE</h1></center>\n        <Form onSubmit={authentication}>\n          <Form.Group controlId=\"formBasicUsername\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              type=\"username\"\n              placeholder=\"Enter username\"\n              onChange={(event) => {\n                setUsername(event.target.value);\n              }}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={(event) => {\n                setPassword(event.target.value);\n              }}\n            />\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n          <Link\n            to=\"/register\"\n            style={{\n              color: \"#fff\",\n              background: \"#007bff\",\n              padding: \"10px\",\n              margin: \"10px 15px\",\n              borderRadius: \"7%\",\n              fontSize: \"14px\",\n            }}\n          >\n            Click to Register\n          </Link>\n        </Form>\n      </Container>\n    </div>\n  );\n};\n\nexport default Login;","import { useState } from \"react\";\nimport { getToken } from \"../api\";\nimport Form from \"react-bootstrap/Form\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\n\nconst MakeActivity = ({ activities, setActivities }) => {\n  const [show, setShow] = useState(false);\n  \n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  function makeNewActivity(event) {\n    event.preventDefault();\n    if (getToken()) {\n      fetch(\"https://fitnesstrac-kr.herokuapp.com/api/activities\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getToken()}`,\n        },\n        body: JSON.stringify({\n          name: name,\n          description: description,\n        }),\n      })\n        .then((response) => response.json())\n        .then((result) => {\n          if (result) {\n            const newActivities = [...activities];\n            console.log(result);\n            newActivities.push(result);\n            setActivities(newActivities);\n            if (result.error) {\n              alert(\"This activity already exists. Please create a new one.\");\n            }\n          }\n        })\n        .catch(console.error);\n    }\n    event.target.reset();\n  }\n\n  return (\n    <div>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Create Activity.\n      </Button>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Make New Activity.</Modal.Title>\n        </Modal.Header>\n\n        <Form onSubmit={makeNewActivity}>\n          <Modal.Body>\n            <Form.Group controlId=\"formBasicName\">\n              <Form.Label>Name:</Form.Label>\n              <Form.Control\n                placeholder=\"Enter name\"\n                onChange={(event) => {\n                  setName(event.target.value);\n                }}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicGoal\">\n              <Form.Label>Description:</Form.Label>\n              <Form.Control\n                placeholder=\"Enter description\"\n                onChange={(event) => {\n                  setDescription(event.target.value);\n                }}\n              />\n            </Form.Group>\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" type=\"submit\">\n              Make a New Activity\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default MakeActivity;","import { useState, useEffect } from \"react\";\nimport { getToken } from \"../api\";\nimport MakeActivity from \"./MakeActivity\";\n\nconst Activities = ({ authenticate }) => {\n  const [activities, setActivities] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://fitnesstrac-kr.herokuapp.com/api/activities\", {\n       \n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        console.log(result);\n        setActivities(result);\n      })\n      .catch(console.error);\n  }, []);\n\n  return (\n    <div>\n      <center>\n        {\" \"}\n        <h1>Activities</h1>\n        {authenticate && getToken() ? (\n          <MakeActivity activities={activities} setActivities={setActivities} />\n        ) : null}\n      <hr></hr>\n      <section>\n        {activities.map((activity, index) => {\n          return (\n            <section key={index}>\n              <h3>{activity.name}</h3>\n              <p>{activity.description}</p>\n              <hr></hr>\n            </section>\n          );\n        })}\n      </section>\n      </center>\n    </div>\n  );\n};\n\nexport default Activities;","import { useState } from \"react\";\nimport { getToken } from \"../api\";\nimport Form from \"react-bootstrap/Form\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\n\nconst MakeRoutine = ({ routines, setRoutines }) => {\n  const [show, setShow] = useState(false);\n\n  const [name, setName] = useState(\"\");\n  const [goal, setGoal] = useState(\"\");\n  const [isPublic, setIsPublic] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  function makeNewRoutine(event) {\n    event.preventDefault();\n    if (getToken()) {\n      fetch(\"https://fitnesstrac-kr.herokuapp.com/api/routines\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getToken()}`,\n        },\n        body: JSON.stringify({\n          name: name,\n          goal: goal,\n          isPublic: isPublic,\n        }),\n      })\n        .then((response) => response.json())\n        .then((result) => {\n          if (result) {\n            const newRoutines = [...routines];\n            console.log(result);\n            newRoutines.push(result);\n            setRoutines(newRoutines);\n          }\n        })\n        .catch(console.error);\n    }\n    event.target.reset();\n  }\n\n  return (\n    <div>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Create Routine.\n      </Button>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Make New Routine</Modal.Title>\n        </Modal.Header>\n\n        <Form onSubmit={makeNewRoutine}>\n          <Modal.Body>\n            <Form.Group controlId=\"formBasicName\">\n              <Form.Label>Name:</Form.Label>\n              <Form.Control\n                placeholder=\"Enter name\"\n                onChange={(event) => {\n                  setName(event.target.value);\n                }}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicGoal\">\n              <Form.Label>Goal:</Form.Label>\n              <Form.Control\n                placeholder=\"Enter goal\"\n                onChange={(event) => {\n                  setGoal(event.target.value);\n                }}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicGoal\">\n              <Form.Label>IsPublic:</Form.Label>\n              <Form.Control\n                type=\"checkbox\"\n                onClick={() => {\n                  !isPublic ? setIsPublic(true) : setIsPublic(false);\n                }}\n              />\n            </Form.Group>\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" type=\"submit\">\n              Make a New Routine\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default MakeRoutine;\n\n","import { useState, useEffect } from \"react\";\nimport { getToken } from \"../api\";\nimport Form from \"react-bootstrap/Form\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\n\nconst AddActivityToRoutine = ({ routines, setRoutines, routineId }) => {\n  const [activityId, setActivityId] = useState(\"\");\n  const [count, setCount] = useState(\"\");\n  const [duration, setDuration] = useState(\"\");\n  const [activities, setActivities] = useState([]);\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetch(\"https://fitnesstrac-kr.herokuapp.com/api/activities\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        setActivities(result);\n        console.log(result);\n      })\n      .catch(console.error);\n  }, []);\n\n  async function addAct(event) {\n    event.preventDefault();\n    console.log(activityId);\n    await fetch(\n      `https://fitnesstrac-kr.herokuapp.com/api/routines/${routineId}/activities`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getToken()}`,\n        },\n        body: JSON.stringify({\n          activityId: activityId,\n          count: count,\n          duration: duration,\n        }),\n      }\n    )\n      .then((response) => response.json())\n      .then((result) => {\n        if (result) {\n          const newRoutines = [...routines];\n          console.log(result);\n          newRoutines.push(result);\n          setRoutines(newRoutines);\n        }\n      })\n      .catch(console.error);\n    event.target.reset();\n  }\n\n  return (\n    <div>\n      <Button variant=\"info\" onClick={handleShow}>\n        Add Activity to Routine.\n      </Button>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add Activity to Routine.</Modal.Title>\n        </Modal.Header>\n\n        <Form onSubmit={addAct}>\n          <Modal.Body>\n            <Form.Label>Activity: </Form.Label>\n            <select\n              name=\"activities\"\n              value={activityId}\n              id=\"add-activity\"\n              onChange={(event) => {\n                setActivityId(event.target.value);\n                console.log(event.target.value);\n                console.log(activityId);\n              }}\n            >\n              <option value=\"activities\">Choose Activity</option>\n              {activities.map((activity, index) => {\n                return (\n                  <option key={index} value={activity.id}>\n                    {activity.name}\n                  </option>\n                );\n              })}\n            </select>\n            <Form.Group controlId=\"formBasicCount\">\n              <Form.Label>Count:</Form.Label>\n              <Form.Control\n                placeholder=\"Enter count (reps)\"\n                onChange={(event) => {\n                  setCount(Number(event.target.value));\n                }}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicDuration\">\n              <Form.Label>Duration:</Form.Label>\n              <Form.Control\n                placeholder=\"Enter duration (mins)\"\n                onChange={(event) => {\n                  setDuration(event.target.value);\n                }}\n              />\n            </Form.Group>\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" type=\"submit\">\n              Add Activity to Routine.\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default AddActivityToRoutine;","import { useState } from \"react\";\nimport { getToken } from \"../api\";\nimport Form from \"react-bootstrap/Form\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\n\nconst EditRoutine = ({ routines, setRoutines, routineId }) => {\n  const [name, setName] = useState(\"\");\n  const [goal, setGoal] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  function editNewRoutine(event) {\n    event.preventDefault();\n    if (getToken()) {\n      fetch(\n        `https://fitnesstrac-kr.herokuapp.com/api/routines/${routineId}`,\n        {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${getToken()}`,\n          },\n          body: JSON.stringify({\n            name: name,\n            goal: goal,\n          }),\n        }\n      )\n        .then((response) => response.json())\n        .then((result) => {\n          if (result) {\n            const updatedRoutine = routines.map((routine) => {\n              if (routine.id === routineId) {\n                return result;\n              } else {\n                return routine;\n              }\n            });\n            setRoutines(updatedRoutine);\n          }\n        })\n        .catch(console.error);\n    }\n    event.target.reset();\n  }\n\n  return (\n    <div>\n      <Button variant=\"warning\" onClick={handleShow}>\n        Edit Routine\n      </Button>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Edit Routine.</Modal.Title>\n        </Modal.Header>\n\n        <Form onSubmit={editNewRoutine}>\n          <Modal.Body>\n            <Form.Group controlId=\"formBasicName\">\n              <Form.Label>Name:</Form.Label>\n              <Form.Control\n                placeholder=\"Update name\"\n                onChange={(event) => {\n                  setName(event.target.value);\n                }}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicGoal\">\n              <Form.Label>Goal:</Form.Label>\n              <Form.Control\n                placeholder=\"Update goal\"\n                onChange={(event) => {\n                  setGoal(event.target.value);\n                }}\n              />\n            </Form.Group>\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" type=\"submit\">\n              Edit Routine.\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default EditRoutine;","import { useState } from \"react\";\nimport { getToken } from \"../api\";\nimport Form from \"react-bootstrap/Form\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\n\nconst EditActivityDurationOrCount = ({\n  routines,\n  setRoutines,\n  routineActivityId,\n  userId,\n}) => {\n  const [count, setCount] = useState(\"\");\n  const [duration, setDuration] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  function editCountAndDuration(event) {\n    event.preventDefault();\n    if (getToken()) {\n      fetch(\n        `https://fitnesstrac-kr.herokuapp.com/api/routine_activities/${routineActivityId}`,\n        {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${getToken()}`,\n          },\n          body: JSON.stringify({\n            count: count,\n            duration: duration,\n          }),\n        }\n      )\n        .then((response) => response.json())\n        .then((result) => {\n          console.log(result);\n          if (result) {\n            const updatedDurationOrCount = routines.map((routine) => {\n              if (routine.creatorId === userId) {\n                console.log(routine.creatorId);\n                console.log(userId);\n                routine.activities.map((activity) => {\n                  if (routineActivityId === activity.id) {\n                    console.log(activity.id);\n                    console.log(routineActivityId);\n                    console.log(result);\n                    return result;\n                  }\n                });\n                return routine;\n              }\n            });\n            setRoutines(updatedDurationOrCount);\n          }\n        })\n        .catch(console.error);\n    }\n    event.target.reset();\n  }\n\n  return (\n    <div>\n      <Button variant=\"secondary\" onClick={handleShow}>\n        Edit Activity's Count and Duration\n      </Button>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Edit Activity's Count and Duration</Modal.Title>\n        </Modal.Header>\n\n        <Form onSubmit={editCountAndDuration}>\n          <Modal.Body>\n            <Form.Group controlId=\"formBasicCount\">\n              <Form.Label>Count:</Form.Label>\n              <Form.Control\n                placeholder=\"Update count (reps)\"\n                onChange={(event) => {\n                  setCount(Number(event.target.value));\n                }}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicDuration\">\n              <Form.Label>Duration:</Form.Label>\n              <Form.Control\n                placeholder=\"Update duration (mins)\"\n                onChange={(event) => {\n                  setDuration(Number(event.target.value));\n                }}\n              />\n            </Form.Group>\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" type=\"submit\">\n              Edit Activity's Count and Duration\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default EditActivityDurationOrCount;\n","import { useEffect, useState } from \"react\";\nimport { getUsername, getToken } from \"../api\";\n import MakeRoutine from \"./MakeRoutine\";\n import AddActivityToRoutine from \"./AddActivityToRoutine\";\n  import EditRoutine from \"./EditRoutine\";\nimport EditActivityDurationOrCount from \"./EditActivityDurationOrCount\";\nimport Button from \"react-bootstrap/Button\";\n\nconst MyRoutines = () => {\n  const [routines, setRoutines] = useState([]);\n  const [userId, setUserId] = useState();\n  useEffect(() => {\n    getUsername()\n      .then((response) => response.json())\n      .then((result) => {\n        setUserId(result.id);\n      })\n      .catch(console.error);\n    fetch(\"https://fitnesstrac-kr.herokuapp.com/api/routines\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        console.log(result);\n        setRoutines(result);\n      })\n      .catch(console.error);\n  }, []);\n\n  const deleteRoutine = (routineId) => {\n    fetch(\n      `https://fitnesstrac-kr.herokuapp.com/api/routines/${routineId}`,\n      {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getToken()}`,\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((result) => {\n        console.log(result);\n        if (result) {\n          const newDeletedRoutines = routines.filter(\n            (routine) => routine.id !== routineId\n          );\n          setRoutines(newDeletedRoutines);\n        }\n      })\n      .catch(console.error);\n  };\n\n  const deleteRoutineActivity = (routineActivityId) => {\n    fetch(\n      `https://fitnesstrac-kr.herokuapp.com/api/routine_activities/${routineActivityId}`,\n      {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getToken()}`,\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((result) => {\n        console.log(result);\n        if (result) {\n          const newDeletedRoutines = routines.filter((routine) => {\n            routine.activities.filter(\n              (activity) => activity.id !== routineActivityId\n            );\n          });\n          setRoutines(newDeletedRoutines);\n        }\n      })\n      .catch(console.error);\n  };\n\n  return (\n    <div>\n      <center>\n        <h1>My Routines</h1>\n        <section>\n          <center>\n            <MakeRoutine routines={routines} setRoutines={setRoutines} />{\" \"}\n          </center>\n          <hr />\n          {routines.map((routine, index) => {\n            if (routine.creatorId === userId) {\n              return (\n                <section>\n                  <h3 key={index}>{routine.name.toUpperCase()}</h3>\n                  <p>{routine.goal}</p>\n                  <p style={{ fontWeight: \"bold\" }}>\n                    Routine by: {routine.creatorName}\n                  </p>\n\n                  {routine.activities ? (\n                    <div>\n                      {routine.activities.map((activity, index) => {\n                        return (\n                          <>\n                            <h5 key={index}>\n                              Activity: {activity.name.toUpperCase()}{\" \"}\n                            </h5>\n                            <p>Count (reps): {activity.count}</p>\n                            <p>Duration (mins): {activity.duration}</p>\n                            <EditActivityDurationOrCount\n                              creatorId={routine.creatorId}\n                              userId={userId}\n                              routineActivityId={activity.id}\n                              routines={routines}\n                              setRoutines={setRoutines}\n                            />\n                            <Button\n                              variant=\"outline-danger\"\n                              onClick={() => deleteRoutineActivity(activity.id)}\n                            >\n                              Delete Routine Activity\n                            </Button>\n                          </>\n                        );\n                      })}\n                    </div>\n                  ) : null}\n\n                  <AddActivityToRoutine\n                    routines={routines}\n                    setRoutines={setRoutines}\n                    routineId={routine.id}\n                  />\n                  <EditRoutine\n                    routineId={routine.id}\n                    routines={routines}\n                    setRoutines={setRoutines}\n                  />\n                  <Button\n                    variant=\"danger\"\n                    onClick={() => deleteRoutine(routine.id)}\n                  >\n                    Delete Routine\n                  </Button>\n                  <hr />\n                </section>\n              );\n            }\n          })}\n        </section>\n      </center>\n    </div>\n  );\n};\n\nexport default MyRoutines;\n","import { useState, useEffect } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { getToken, logout } from \"../api\";\n\nconst Logout = ({ authenticate, setAuthentication }) => {\n  const [ logoutSuccessful, setLogoutSuccessful ] = useState(false);\n \n  useEffect(() => {\n    if (getToken() ) {\n      logout();\n      setLogoutSuccessful(true);\n      setAuthentication(false);\n    }\n  }, []);\n\n  if (logoutSuccessful && !authenticate) {\n    return (<Route exact path=\"/logout\">\n    <Redirect to=\"/\" />\n  </Route>)\n  }\n  return null;\n};\nexport default Logout;","import { useEffect, useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport CardGroup from \"react-bootstrap/CardGroup\";\n\nconst Routines = () => {\n  const [routines, setRoutines] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://fitnesstrac-kr.herokuapp.com/api/routines\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        console.log(result);\n        setRoutines(result);\n      })\n      .catch(console.error);\n  }, []);\n\n  return (\n    <div>\n      <center>\n        <h1>Routines</h1>\n        <hr />\n        <section>\n          {routines.map((routine, index) => {\n            return (\n              <CardGroup>\n                <Card style={{ backgroundColor: \"dark\" }}>\n                  <Card.Body>\n                    <Card.Title>{routine.name.toUpperCase()}</Card.Title>\n                    <Card.Text key={index}>\n                      <p>{routine.goal}</p>\n                      <div>\n                        {routine.activities.map((activity, index) => {\n                          return (\n                            <>\n                              <p style={{ fontWeight: \"bold\" }} key={index}>\n                                Activity: {activity.name.toUpperCase()}\n                              </p>\n                              <p>Count (reps): {activity.count}</p>\n                              <p>Duration (mins): {activity.duration}</p>\n                            </>\n                          );\n                        })}\n                      </div>\n                      <p style={{ fontWeight: \"bold\" }}>Routine by: {routine.creatorName}</p>\n                    </Card.Text>\n                  </Card.Body>\n                </Card>\n              </CardGroup>\n            );\n          })}\n        </section>\n      </center>\n    </div>\n  );\n};\n\nexport default Routines;","import { React, useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport {\n Register,\n  Login,\n  Logout,\n  Routines,\n  MyRoutines,\n  Activities,\n  Home,\n} from \"./pages\";\nimport { getToken } from \"./api\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\n\nconst App = () => {\n  const [username, setUsername] = useState();\n  const [token, setToken] = useState();\n  const [authenticate, setAuthentication] = useState(false);\n\n  useEffect(() => {\n    if (getToken() && getToken() !== undefined) {\n      setAuthentication(true);\n    }\n  }, []);\n  return (\n    <Router>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"/\">FitnessTrackr</Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"/\">Home</Nav.Link>\n          <Nav.Link href=\"/routines\">Routines</Nav.Link>\n          {!authenticate && !getToken() ? null : (\n            <Nav.Link href=\"/myRoutines\">My Routines</Nav.Link>\n          )}\n          <Nav.Link href=\"/activities\">Activities</Nav.Link>\n          {!authenticate && !getToken() ? (\n            <Nav.Link href=\"/login\">Login/Register</Nav.Link>\n          ) : (\n            <Link\n              style={{ color: \"rgba(255,255,255,.5)\", padding: \"7.5px\" }}\n              to=\"/logout\"\n            >\n              Logout\n            </Link>\n          )}\n        </Nav>\n      </Navbar>\n\n      <main>\n        <Switch>\n          <Route path=\"/routines\">\n            <Routines />\n          </Route>\n          <Route path=\"/myRoutines\">\n            <MyRoutines />\n          </Route>\n          <Route path=\"/activities\">\n            <Activities authenticate={authenticate} />\n          </Route>\n          <Route path=\"/login\">\n            <Login\n              username={username}\n              setUsername={setUsername}\n              setToken={setToken}\n              authenticate={authenticate}\n              setAuthentication={setAuthentication}\n            />\n          </Route>\n          <Route path=\"/logout\">\n            <Logout\n              authenticate={authenticate}\n              setAuthentication={setAuthentication}\n            />\n          </Route>\n          <Route path=\"/register\">\n            <Register\n              username={username}\n              setUsername={setUsername}\n              token={token}\n              setToken={setToken}\n              authenticate={authenticate}\n              setAuthentication={setAuthentication}\n            />\n          </Route>\n          <Route path=\"/\">\n            <Home authenticate={authenticate} />\n          </Route>\n        </Switch>\n      </main>\n    </Router>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}